{"title":"linuxKernel-2","date":"2021-05-24T02:56:26.000Z","date_formatted":{"ll":"2021年5月24日","L":"2021/05/24","MM-DD":"05-24"},"link":"2021/05/24/linuxKernel-2","tags":["linux"],"updated":"2021-05-25T11:52:38.469Z","content":"<p>80386 的CPU，总线包含三个：<strong>内部地址线、控制线、数据线</strong>。每根线有32位，即0-4GB的寻址范围。</p>\n<ul>\n<li>I/O端口和寻址</li>\n</ul>\n<p>指定控制器和控制卡上的地址。一个I/O控制器包含访问<em>数据的数据端口 、输出命令的命令端口和访问控制器执行状态的状态端口</em></p>\n<p><strong>统一编址和独立编址</strong></p>\n<p>存储器映像编址：把I/O控制器中的端口地址归入存储器寻址地址空间范围内。</p>\n<p>I/O接口数据传输控制方式：<strong>程序循环查询方式，中断处理方式和DMA传输方式</strong></p>\n<ul>\n<li>程序循环查询方式：CPU循环查询设备控制器的状态，来判断是否可以交换数据</li>\n<li>中断处理：需要<strong>中断控制器</strong> ，当I/O设备通过中断发送处理请求时，CPU才会暂时中断，去执行相应的I/O中断处理服务过程</li>\n<li>DMA（直接存储器访问）：I/O设备与系统内存进行批量数据传送，需要使用专门的DMA控制器无需CPU插手。</li>\n</ul>\n<p>在Linux 0.1x系统中，假设内存为16M</p>\n<ul>\n<li>0-640K，内核代码和数据，其不使用BIOS功能也不使用BIOS设置的中断向量表</li>\n<li>640K- 1M ，各个控制卡的BIOS区</li>\n<li>1M-16M，主内存区</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/lumosmax7/pics/main/uPic/Screen%20Shot%202021-05-21%20at%2020.48.24.png\" alt=\"Screen Shot 2021-05-21 at 20.48.24\" class=\"φbs\"></p>\n<p>PC/AT微机中，BIOS容量大多有1MB-2MB，并且存储在闪存ROM 中，为了执行或者访问<strong>BIOS中超过64KB范围并且由远远不在0-1M地址空间的其他BIOS代码</strong>，BIOS程序会首先使用<em>32位大模式</em>技术把数据段寄存器的访问范围设置为4G。完成初始化后，BIOS就会把操作系统加载到内存<strong>0x7c00</strong>处。</p>\n<p><img src=\"https://raw.githubusercontent.com/lumosmax7/pics/main/uPic/Screen%20Shot%202021-05-24%20at%2010.46.50.png\" alt=\"Screen Shot 2021-05-24 at 10.46.50\" class=\"φbs\"></p>\n<p>**中断控制器：**两片级联的8259A可编程中断控制芯片，组成中断控制器。能为15个设备提供独立的中断控制功能。</p>\n<p>**DMA控制器：**8237芯片来实现。</p>\n<p><strong>定时/计数器：</strong> 8253/54芯片，Linux 0.11操作系统只对通道0进行重新设置，使其工作在<strong>方式3</strong>上，每间隔10ms，发出一个信号产生一个信号以产生中断请求信号<em>IRQ0</em>，<strong>作用：</strong> 定时切换当前执行任务和统计每个任务使用的系统资源量</p>\n<p><strong>键盘控制器</strong>：8042，<em>接通码、断开码</em></p>\n<p><strong>串行控制卡</strong>：通信协议规定了传送一个有效数据长度单位的格式，称为<strong>帧</strong>。<em>串行通信</em>的概念是指在线路上一次一个比特进行传输的通信方式，分为异步和同步两种类型。</p>\n<p><strong>显示控制</strong>：字符字节和属性字节。</p>\n","prev":{"title":"linuxKernel-3","link":"2021/05/24/linuxKernel-3"},"next":{"title":"linuxKernel-1","link":"2021/05/24/linuxKernel-1"},"plink":"http://example.com/2021/05/24/linuxKernel-2/"}